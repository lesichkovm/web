{
  "version": 3,
  "sources": ["../src/core/utils.js", "../src/core/pubsub.js", "../src/core/url.js", "../src/core/auth.js", "../src/core/navigation.js", "../node_modules/@lesichkovm/registryjs/dist/registry.js", "../src/loadWidgets.js", "../src/web.js"],
  "sourcesContent": ["function rtrim(str, charlist) {\n  charlist = !charlist\n    ? \" \\\\s\\u00A0\"\n    : (charlist + \"\").replace(/([\\[\\]\\(\\)\\.\\?\\/\\*\\{\\}\\+\\$\\^\\:])/g, \"\\\\$1\");\n  var re = new RegExp(\"[\" + charlist + \"]+$\", \"g\");\n  return (str + \"\").replace(re, \"\");\n}\n\nfunction ltrim(str, charlist) {\n  charlist = !charlist\n    ? \" \\\\s\\u00A0\"\n    : (charlist + \"\").replace(/([\\[\\]\\(\\)\\.\\?\\/\\*\\{\\}\\+\\$\\^\\:])/g, \"$1\");\n  var re = new RegExp(\"^[\" + charlist + \"]+\", \"g\");\n  return (str + \"\").replace(re, \"\");\n}\n\n/**\n * Returns a unique identifier for the application\n * @returns {string}\n */\nfunction getUniqueId() {\n  return typeof APP_ID === \"undefined\"\n    ? JSON.stringify(window.location.hostname)\n    : APP_ID;\n}\n\n// Export for CommonJS/Node.js\nif (typeof module !== 'undefined' && module.exports) {\n  module.exports = { rtrim, ltrim, getUniqueId };\n}\n\n// Export for browser global\nif (typeof window !== 'undefined') {\n  window.WebJS = window.WebJS || {};\n  window.WebJS.utils = { rtrim, ltrim, getUniqueId };\n}\n", "function createPubSub() {\n  const topics = {};\n  let subUid = -1;\n\n  return {\n    /**\n     * Publish a message to a topic\n     * @param {string} topic - The topic to publish to\n     * @param {*} args - Data to pass to subscribers\n     * @returns {boolean} - True if there were subscribers, false otherwise\n     */\n    publish(topic, args) {\n      if (!topics[topic]) {\n        return false;\n      }\n\n      setTimeout(() => {\n        const subscribers = topics[topic];\n        let len = subscribers ? subscribers.length : 0;\n\n        while (len--) {\n          subscribers[len].func(topic, args);\n        }\n      }, 0);\n\n      return true;\n    },\n\n    /**\n     * Subscribe to a topic\n     * @param {string} topic - The topic to subscribe to\n     * @param {Function} func - The function to call when a message is published\n     * @returns {string} - A token that can be used to unsubscribe\n     */\n    subscribe(topic, func) {\n      if (!topics[topic]) {\n        topics[topic] = [];\n      }\n\n      const token = (++subUid).toString();\n      topics[topic].push({\n        token,\n        func,\n      });\n      return token;\n    },\n\n    /**\n     * Unsubscribe from a topic\n     * @param {string} token - The subscription token to remove\n     * @returns {string|boolean} - The token if unsubscribed, false otherwise\n     */\n    unsubscribe(token) {\n      for (const m in topics) {\n        if (topics[m]) {\n          for (let i = 0, j = topics[m].length; i < j; i++) {\n            if (topics[m][i].token === token) {\n              topics[m].splice(i, 1);\n              return token;\n            }\n          }\n        }\n      }\n      return false;\n    }\n  };\n}\n\n// Export for CommonJS/Node.js\nif (typeof module !== 'undefined' && module.exports) {\n  module.exports = createPubSub;\n}\n", "/**\n * URL-related utility functions\n */\n\n/**\n * Returns the root URL of the website\n * @returns {string}\n */\nfunction getRootUrl() {\n  return typeof WEBSITE_URL === \"undefined\"\n    ? window.location.protocol +\n        \"//\" +\n        window.location.hostname +\n        (window.location.port ? \":\" + window.location.port : \"\")\n    : WEBSITE_URL;\n}\n\n/**\n * Returns the API URL\n * @returns {string}\n */\nfunction getApiUrl() {\n  return typeof API_URL === \"undefined\"\n    ? window.location.protocol +\n        \"//\" +\n        window.location.hostname +\n        (window.location.port ? \":\" + window.location.port : \"\") +\n        \"/api\"\n    : API_URL;\n}\n\n/**\n * Returns the current page URL\n * @returns {string}\n */\nfunction getUrl() {\n  return window.location.href;\n}\n\n/**\n * Returns the URL parameters as an object\n * @returns {Object}\n */\nfunction getUrlParams() {\n  const s = window.location.search.substring(1).split(\"&\");\n  const params = {};\n  \n  if (!s.length) {\n    return params;\n  }\n\n  for (let i = 0; i < s.length; i++) {\n    const parts = s[i].split(\"=\");\n    params[decodeURIComponent(parts[0])] = decodeURIComponent(parts[1] || '');\n  }\n\n  return params;\n}\n\n/**\n * Returns a single URL parameter\n * @param {string} parameter - The parameter name to get\n * @returns {string|null}\n */\nfunction getUrlParam(parameter) {\n  const parameters = getUrlParams();\n  return typeof parameters[parameter] === \"undefined\" \n    ? null \n    : parameters[parameter];\n}\n\n// Export for CommonJS/Node.js\nif (typeof module !== 'undefined' && module.exports) {\n  module.exports = {\n    getRootUrl,\n    getApiUrl,\n    getUrl,\n    getUrlParams,\n    getUrlParam\n  };\n}\n\n// Export for browser global\nif (typeof window !== 'undefined') {\n  window.WebJS = window.WebJS || {};\n  window.WebJS.URL = {\n    getRootUrl,\n    getApiUrl,\n    getUrl,\n    getUrlParams,\n    getUrlParam\n  };\n}\n", "/**\n * Authentication-related utility functions\n */\n\n/**\n * Returns the authenticated user\n * @returns {Object|null} - The authenticated user or null if not authenticated\n */\nfunction getAuthUser(registry) {\n  return registry.get(\"AuthUser\");\n}\n\n/**\n * Sets the authenticated user\n * @param {Object} user - The user object to set\n * @param {Object} registry - The registry instance to use\n * @returns {Object} - The set user\n */\nfunction setAuthUser(user, registry) {\n  return registry.set(\"AuthUser\", user);\n}\n\n/**\n * Returns the authentication token\n * @param {Object} registry - The registry instance to use\n * @returns {string} - The authentication token\n */\nfunction getAuthToken(registry) {\n  return registry.get(\"AuthToken\");\n}\n\n/**\n * Sets the authentication token\n * @param {string} token - The token to set\n * @param {Object} registry - The registry instance to use\n * @returns {string} - The set token\n */\nfunction setAuthToken(token, registry) {\n  return registry.set(\"AuthToken\", token);\n}\n\n/**\n * Returns the current language\n * @param {Object} registry - The registry instance to use\n * @returns {string} - The current language code (default: 'en')\n */\nfunction getLanguage(registry) {\n  const language = registry.get(\"CurrentLanguage\");\n  return language === null ? \"en\" : language;\n}\n\n/**\n * Sets the current language\n * @param {string} language - The language code to set\n * @param {Object} registry - The registry instance to use\n * @returns {string} - The set language code\n */\nfunction setLanguage(language, registry) {\n  return registry.set(\"CurrentLanguage\", language);\n}\n\n// Export for CommonJS/Node.js\nif (typeof module !== 'undefined' && module.exports) {\n  module.exports = {\n    getAuthUser,\n    setAuthUser,\n    getAuthToken,\n    setAuthToken,\n    getLanguage,\n    setLanguage\n  };\n}\n\n// Export for browser global\nif (typeof window !== 'undefined') {\n  window.WebJS = window.WebJS || {};\n  window.WebJS.Auth = {\n    getAuthUser: (registry) => getAuthUser(registry),\n    setAuthUser: (user, registry) => setAuthUser(user, registry),\n    getAuthToken: (registry) => getAuthToken(registry),\n    setAuthToken: (token, registry) => setAuthToken(token, registry),\n    getLanguage: (registry) => getLanguage(registry),\n    setLanguage: (language, registry) => setLanguage(language, registry)\n  };\n}\n", "const { rtrim, ltrim } = require('./utils');\n\n/**\n * Creates a navigation utility with the given configuration\n * @param {Object} config - The configuration object with getRootUrl method\n * @returns {Object} - Navigation methods\n */\nfunction createNavigation(config) {\n  /**\n   * Navigates to a URL\n   * @param {string} url - The URL to navigate to\n   * @param {Object} [data] - Query parameters to append to the URL\n   * @param {Object} [options] - Navigation options\n   * @param {string} [options.target] - The target for the navigation (e.g., '_blank')\n   * @returns {boolean} - False to prevent default link behavior\n   */\n  function navigateTo(url, data, options = {}) {\n    // Handle external URLs\n    if (url.match(/^https?:\\/\\//)) {\n      // External URL, keep as is\n    } else {\n      // Internal URL, prepend root URL\n      url = rtrim(config.getRootUrl(), \"/\") + \"/\" + ltrim(url, \"/\");\n    }\n\n    // Add query parameters if provided\n    if (data) {\n      const queryString = Object.keys(data)\n        .map(key => `${encodeURIComponent(key)}=${encodeURIComponent(data[key])}`)\n        .join(\"&\");\n      \n      if (queryString) {\n        const separator = url.includes('?') ? '&' : '?';\n        url = `${url}${separator}${queryString}`;\n      }\n    }\n\n    // Handle navigation based on options\n    if (options && options.target === \"_blank\") {\n      // In test environment, add the URL to document body\n      if (process.env.NODE_ENV === 'test') {\n        const div = document.createElement('div');\n        div.textContent = url;\n        document.body.appendChild(div);\n      } else {\n        const link = document.createElement(\"a\");\n        link.href = url;\n        link.target = \"_blank\";\n        link.style.display = \"none\";\n        document.body.appendChild(link);\n        link.click();\n        document.body.removeChild(link);\n      }\n    } else {\n      window.location.href = url;\n    }\n\n    return false; // Prevent default link behavior\n  }\n\n  return {\n    navigateTo\n  };\n}\n\n// Export for CommonJS/Node.js\nif (typeof module !== 'undefined' && module.exports) {\n  module.exports = createNavigation;\n}\n\n// Export for browser global\nif (typeof window !== 'undefined') {\n  window.WebJS = window.WebJS || {};\n  window.WebJS.createNavigation = createNavigation;\n}\n", "(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  (global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.Registry = factory());\n})(this, (function () { 'use strict';\n\n  /**\n   * Constructs and returns the root URL (origin) of the current web page.\n   * It prioritizes `window.location.origin` for modern browser compatibility.\n   * Falls back to manual construction using protocol, hostname, and port for older browsers\n   * or environments where `origin` might not exist or return \"null\".\n   * For 'file://' URLs, it explicitly returns \"unknown\" as there's no true web \"origin\".\n   * Includes comprehensive checks for the existence of window, window.location, and its properties.\n   *\n   * @returns {string} The root URL (e.g., \"https://www.example.com:8080\", \"http://localhost:80\", or \"unknown\" if no valid web origin can be determined).\n   */\n  function getRootUrl() {\n    // Early exit for non-browser environments\n    if (typeof window === 'undefined' || typeof window.location === 'undefined') {\n        console.warn(\"window or window.location is not available. Cannot determine root URL dynamically.\");\n        return \"unknown\";\n    }\n\n    // Attempt to use window.location.origin first (modern browser best practice)\n    // This will handle most cases cleanly for http/https, and be 'null' for file://\n    if (window.location.origin && window.location.origin !== 'null') {\n        return window.location.origin;\n    }\n\n    // If origin is not available or is 'null', proceed with manual construction fallback.\n    // Ensure basic protocol and hostname properties are available before proceeding.\n    const protocol = window.location.protocol;\n    const hostname = window.location.hostname;\n    const port = window.location.port; // Empty string if no explicit port\n\n    // Check if essential components for a web URL exist and are valid strings\n    const hasValidProtocol = typeof protocol === 'string' && protocol.length > 0;\n    const hasValidHostname = typeof hostname === 'string' && hostname.length > 0;\n\n    // Handle 'file://' protocol specifically (no true web origin)\n    if (hasValidProtocol && protocol === 'file:') {\n        console.warn(\"Detected 'file://' protocol. No standard web origin is available, returning 'unknown'.\");\n        return \"unknown\";\n    }\n\n    // Attempt to construct a standard web URL (http/https etc.)\n    if (hasValidProtocol && hasValidHostname) {\n        // Include port only if window.location.port is NOT an empty string\n        const portString = port ? `:${port}` : '';\n        return `${protocol}//${hostname}${portString}`;\n    }\n\n    // If all attempts to determine a valid root URL fail, return \"unknown\"\n    console.warn(\"Could not determine root URL from window.location properties.\");\n    return \"unknown\";\n  }\n\n  /**\n   * Encodes a string to base64\n   * @param {string} str - The string to encode\n   * @returns {string} Base64 encoded string\n   */\n  function base64encode(str) {\n    if (typeof btoa === 'function') {\n      return btoa(str);\n    } else if (typeof Buffer !== 'undefined') {\n      // Node.js environment\n      return Buffer.from(str).toString('base64');\n    }\n    throw new Error('Base64 encoding not supported in this environment');\n  }\n\n  /**\n   * JSON stringify wrapper\n   * @param {any} data - Data to stringify\n   * @returns {string} JSON string\n   */\n  function jsonEncode(data) {\n    return JSON.stringify(data);\n  }\n\n  /**\n   * JSON parse wrapper\n   * @param {string} json - JSON string to parse\n   * @returns {any} Parsed data\n   */\n  function jsonDecode(json) {\n    return JSON.parse(json);\n  }\n\n  /**\n   * Generates a namespaced key for storage\n   * @param {string|null} namespace - Optional namespace\n   * @returns {string} Base64 encoded namespace\n   */\n  function getNamespace(namespace) {\n      let namespaceFinal = \"\";\n      if (typeof namespace === \"undefined\" || namespace === null || namespace === \"\") {\n          namespaceFinal = getRootUrl();\n      } else {\n          namespaceFinal = \"@\" + namespace;\n      }\n      return base64encode(namespaceFinal);\n  }\n\n  /**\n   * Creates a namespaced key\n   * @param {string} key - The original key\n   * @param {string} namespace - The namespace\n   * @returns {string} Namespaced key\n   */\n  function createNamespacedKey(key, namespace) {\n      return key + namespace;\n  }\n\n  /**\n   * Creates an expiration key\n   * @param {string} namespacedKey - The namespaced key\n   * @returns {string} Expiration key\n   */\n  function createExpirationKey(namespacedKey) {\n      return namespacedKey + \"&&expires\";\n  }\n\n  /**\n   * Encrypts a value using the original Registry encryption algorithm\n   * @param {any} value - Value to encrypt\n   * @param {string} key - Encryption key (password)\n   * @returns {string} - Encrypted string\n   */\n  function encrypt(value, key) {\n    // Handle null or undefined values\n    if (value === null || value === undefined) {\n      return \"__NULL__\";\n    }\n    \n    // Convert value to JSON string\n    const jsonString = jsonEncode(value);\n    const passLen = key.length;\n    \n    const result = [];\n    for (let i = 0; i < jsonString.length; i++) {\n      const passOffset = i % passLen;\n      const calAscii = jsonString.charCodeAt(i) + key.charCodeAt(passOffset);\n      result.push(calAscii);\n    }\n\n    return jsonEncode(result);\n  }\n\n  /**\n   * Decrypts a value using the original Registry decryption algorithm\n   * @param {string} encryptedStr - Encrypted string\n   * @param {string} key - Encryption key (password)\n   * @returns {any} - Decrypted value\n   */\n  function decrypt(encryptedStr, key) {\n    // Special case for null values\n    if (encryptedStr === \"__NULL__\") {\n      return null;\n    }\n    \n    try {\n      const codesArr = jsonDecode(encryptedStr);\n      const passLen = key.length;\n      \n      const result = [];\n      for (let i = 0; i < codesArr.length; i++) {\n        const passOffset = i % passLen;\n        const calAscii = codesArr[i] - key.charCodeAt(passOffset);\n        result.push(calAscii);\n      }\n\n      let str = \"\";\n      for (let i = 0; i < result.length; i++) {\n        const ch = String.fromCharCode(result[i]);\n        str += ch;\n      }\n\n      return jsonDecode(str);\n    } catch (e) {\n      console.error('Error decrypting value:', e);\n      return null;\n    }\n  }\n\n  /**\n   * Checks if a value has expired\n   * @param {string} namespacedKey - The namespaced key to check\n   * @returns {boolean} True if expired, false otherwise\n   */\n  function isExpired(namespacedKey) {\n    const expirationKey = createExpirationKey(namespacedKey);\n    const expiresValue = localStorage.getItem(expirationKey);\n    \n    if (expiresValue === null) {\n      return false;\n    }\n    \n    const expires = parseInt(expiresValue, 10);\n    const now = Math.floor(Date.now() / 1000);\n    \n    return now >= expires;\n  }\n\n  /**\n   * Sets a value in localStorage with optional expiration\n   * @param {string} namespacedKey - The namespaced key\n   * @param {any} value - The value to store\n   * @param {number} [expires] - Optional expiration time in seconds\n   */\n  function setValue(namespacedKey, value, expires) {\n    // Store the value\n    localStorage.setItem(namespacedKey, jsonEncode(value));\n    \n    // Set expiration if provided\n    if (typeof expires === 'number') {\n      const expirationKey = createExpirationKey(namespacedKey);\n      const expirationTime = Math.floor(Date.now() / 1000) + expires;\n      localStorage.setItem(expirationKey, expirationTime.toString());\n    }\n  }\n\n  /**\n   * Gets a value from localStorage, checking for expiration\n   * @param {string} namespacedKey - The namespaced key\n   * @returns {any} The stored value or null if expired/not found\n   */\n  function getValue(namespacedKey) {\n    // Check if the value has expired\n    if (isExpired(namespacedKey)) {\n      // Remove expired value and its expiration timestamp\n      removeValue(namespacedKey);\n      return null;\n    }\n    \n    // Get the value\n    const value = localStorage.getItem(namespacedKey);\n    if (value === null) {\n      return null;\n    }\n    \n    try {\n      return jsonDecode(value);\n    } catch (e) {\n      console.error('Error parsing stored value:', e);\n      return null;\n    }\n  }\n\n  /**\n   * Removes a value and its expiration from localStorage\n   * @param {string} namespacedKey - The namespaced key\n   */\n  function removeValue(namespacedKey) {\n    // Remove the value\n    localStorage.removeItem(namespacedKey);\n    \n    // Remove the expiration\n    const expirationKey = createExpirationKey(namespacedKey);\n    localStorage.removeItem(expirationKey);\n  }\n\n  /**\n   * Removes all values with a specific namespace prefix\n   * @param {string} namespacePrefix - The namespace prefix\n   */\n  function emptyNamespace(namespacePrefix) {\n    const keys = Object.keys(localStorage);\n    for (let i = 0; i < keys.length; i++) {\n      const key = keys[i];\n      if (key.indexOf(namespacePrefix) > -1) {\n        localStorage.removeItem(key);\n      }\n    }\n  }\n\n  /**\n   * Registry class for browser-based key-value storage with encryption,\n   * namespacing, and expiration functionality.\n   */\n  class Registry {\n    /**\n     * Creates a new Registry instance\n     * @param {string} [namespace] - Optional namespace for isolating stored values\n     */\n    constructor(namespace) {\n      // Generate the namespace\n      const namespaceFinal = getNamespace(namespace);\n      \n      /**\n       * Sets a value in the registry\n       * @param {string} key - The key to store the value under\n       * @param {any} value - The value to store\n       * @param {number} [expires] - Optional expiration time in seconds\n       */\n      this.set = function(key, value, expires) {\n        // Create namespaced key\n        const namespacedKey = createNamespacedKey(key, namespaceFinal);\n        \n        // Encrypt the value (handles null/undefined internally)\n        const encryptedValue = encrypt(value, key);\n        \n        // Store the value\n        setValue(namespacedKey, encryptedValue, expires);\n      };\n      \n      /**\n       * Gets a value from the registry\n       * @param {string} key - The key to retrieve\n       * @returns {any} The stored value or null if not found/expired\n       */\n      this.get = function(key) {\n        // Create namespaced key\n        const namespacedKey = createNamespacedKey(key, namespaceFinal);\n        \n        // Get the encrypted value\n        const encryptedValue = getValue(namespacedKey);\n        \n        // Return null if no value found\n        if (encryptedValue === null) {\n          return null;\n        }\n        \n        // Check for our special null marker\n        if (encryptedValue === \"__NULL__\") {\n          return null;\n        }\n        \n        try {\n          // Decrypt the value - this will handle JSON parsing internally\n          return decrypt(encryptedValue, key);\n        } catch (e) {\n          console.error('Error decrypting value:', e);\n          return null;\n        }\n      };\n      \n      /**\n       * Removes a value from the registry\n       * @param {string} key - The key to remove\n       */\n      this.remove = function(key) {\n        // Create namespaced key\n        const namespacedKey = createNamespacedKey(key, namespaceFinal);\n        \n        // Remove the value\n        removeValue(namespacedKey);\n      };\n      \n      /**\n       * Removes all values in the current namespace\n       */\n      this.empty = function() {\n        // Empty the namespace\n        emptyNamespace(namespaceFinal);\n      };\n    }\n  }\n\n  // Export for module environments while preserving browser functionality\n  if (typeof module !== 'undefined' && typeof module.exports !== 'undefined') {\n    module.exports = Registry;\n  } else if (typeof define === 'function' && define.amd) {\n    // AMD support\n    define([], function() {\n      return Registry;\n    });\n  } else {\n    // Browser global\n    if (typeof window !== 'undefined') {\n      window.Registry = Registry;\n    }\n  }\n\n  return Registry;\n\n}));\n", "function loadWidgets() {\r\n  const widgets = document.querySelectorAll('[data-widget-url]');\r\n  \r\n  widgets.forEach((widget)=>{\r\n    const url = widget.dataset.widgetUrl;\r\n    \r\n    fetch(url).then(function(response) {\r\n      return response.text();\r\n    }).then((html)=>{\r\n      // Load HTML\r\n      widget.innerHTML = html;\r\n    \r\n      // Execute scripts\r\n      const codes = widget.getElementsByTagName(\"script\");\r\n      for (let i=0; i < codes.length; i++) {  \r\n        try {\r\n          // Create a new script element and execute its content\r\n          const script = document.createElement('script');\r\n          script.text = codes[i].text;\r\n          document.head.appendChild(script).parentNode.removeChild(script);\r\n        } catch (e) {\r\n          console.error('Error executing widget script:', e);\r\n        }\r\n      }\r\n    }).catch(error => {\r\n      console.error('Error loading widget:', url, error);\r\n    });\r\n  });\r\n}\r\n\r\n// Add to Initialize prototype if it exists\r\nif (typeof Initialize !== 'undefined') {\r\n  Initialize.prototype.loadWidgets = loadWidgets;\r\n}\r\n\r\n// Export for CommonJS/Node.js\r\nif (typeof module !== 'undefined' && module.exports) {\r\n  module.exports = { loadWidgets };\r\n}\r\n\r\n// Add to window.$$ if it exists\r\nif (typeof window !== 'undefined' && window.$$) {\r\n  window.$$.loadWidgets = loadWidgets;\r\n}\r\n", "// Import utility functions and modules\nconst { rtrim, ltrim, getUniqueId } = require('./core/utils');\nconst createPubSub = require('./core/pubsub');\nconst { getUrl, getUrlParams, getUrlParam, getRootUrl, getApiUrl } = require('./core/url');\nconst {\n  getAuthUser,\n  setAuthUser,\n  getAuthToken,\n  setAuthToken,\n  getLanguage,\n  setLanguage\n} = require('./core/auth');\nconst createNavigation = require('./core/navigation');\n\n// Configuration utilities - kept for backward compatibility\n// but now delegates to the appropriate modules\nfunction ConfigUtils() {\n  this.getUniqueId = getUniqueId;\n  this.getRootUrl = getRootUrl;\n  this.getApiUrl = getApiUrl;\n}\n\n// Import the Registry from external package\n// https://github.com/lesichkovm/registryjs\n// https://www.npmjs.com/package/@lesichkovm/registryjs\nconst Registry = require('@lesichkovm/registryjs');\n\n// Import loadWidgets\nconst { loadWidgets } = require('./loadWidgets');\n\n\n/**\n * Main application class\n * @class Initialize\n * @type {$$\n */\nclass Initialize {\n  constructor() {\n    this.debug = true;\n    \n    // Initialize registry\n    this.registry = new Registry(getUniqueId());\n    \n    // Initialize navigation with the root URL\n    this.navigation = createNavigation({ getRootUrl });\n    \n    // Initialize pub/sub\n    this.pubsub = createPubSub();\n    \n    // Initialize loadWidgets\n    this.loadWidgets = loadWidgets;\n  }\n\n  /**\n   * Retrieves a key value from the registry\n   * @param {String} key\n   * @returns {Object}\n   */\n  get(key) {\n    return this.registry.get(key);\n  }\n\n  /**\n   * Stores a key-value pair to the registry\n   * @param {String} key\n   * @param {Object} value\n   * @returns {Object}\n   */\n  set(key, value) {\n    return this.registry.set(key, value);\n  }\n  \n  /**\n   * Returns the API URL\n   * If an API_URL variable is set, will return as it is. Otherwise will\n   * generate one, assuming the API is hosted on the same domain {domain}/api\n   * @returns {String}\n   */\n  getApiUrl() {\n    return getApiUrl();\n  }\n\n  /**\n   * Returns the current page URL\n   * @returns {string}\n   */\n  getUrl() {\n    return getUrl();\n  }\n\n  /**\n   * Returns the URL parameters as an object\n   * @returns {Object}\n   */\n  getUrlParams() {\n    return getUrlParams();\n  }\n\n  /**\n   * Returns a single URL parameter\n   * @param {string} parameter - The parameter name to get\n   * @returns {string|null}\n   */\n  getUrlParam(parameter) {\n    return getUrlParam(parameter);\n  }\n\n  /**\n   * Returns the authenticated user\n   * @returns {Object|null} - The authenticated user or null if not authenticated\n   */\n  getAuthUser() {\n    return getAuthUser(this.registry);\n  }\n\n  /**\n   * Sets the authenticated user\n   * @param {Object} user - The user object to set\n   * @returns {Object} - The set user\n   */\n  setAuthUser(user) {\n    return setAuthUser(user, this.registry);\n  }\n\n  /**\n   * Returns the authentication token\n   * @returns {string} - The authentication token\n   */\n  getAuthToken() {\n    return getAuthToken(this.registry);\n  }\n\n  /**\n   * Sets the authentication token\n   * @param {string} token - The token to set\n   * @returns {string} - The set token\n   */\n  setAuthToken(token) {\n    return setAuthToken(token, this.registry);\n  }\n  \n  /**\n   * Returns the current language\n   * @returns {string} - The current language code (default: 'en')\n   */\n  getLanguage() {\n    return getLanguage(this.registry);\n  }\n\n  /**\n   * Sets the current language\n   * @param {string} language - The language code to set\n   * @returns {string} - The set language code\n   */\n  setLanguage(language) {\n    return setLanguage(language, this.registry);\n  }\n\n  /**\n   * Redirects the user to the specified URL\n   *\n   * Options:\n   * - target = _blank - will open a new window\n   *\n   * @param {string} url - The URL to navigate to\n   * @param {Object} [data] - Query parameters to append to the URL\n   * @param {Object} [options] - Navigation options\n   * @param {string} [options.target] - The target for the navigation (e.g., '_blank')\n   * @returns {boolean} - False to prevent default link behavior\n   */\n  to(url, data, options) {\n    return this.navigation.navigateTo(url, data, options);\n  }\n\n  /**\n   * Publishes an event to all subscribers\n   * @param {string} event - The event name to publish\n   * @param {*} data - The data to pass to subscribers\n   */\n  publish(event, data) {\n    return this.pubsub.publish(event, data);\n  }\n\n  /**\n   * Subscribes to an event\n   * @param {string} event - The event name to subscribe to\n   * @param {Function} callback - The function to call when the event is published\n   * @returns {Function} - A function to unsubscribe\n   */\n  subscribe(event, callback) {\n    return this.pubsub.subscribe(event, callback);\n  }\n\n  /**\n   * Unsubscribes from an event\n   * @param {string} event - The event name to unsubscribe from\n   * @param {Function} callback - The function to remove from the subscribers list\n   */\n  unsubscribe(event, callback) {\n    return this.pubsub.unsubscribe(event, callback);\n  }\n}\n\n// Initialize components\n$$ = new Initialize();\n\n// Export for CommonJS/Node.js\nif (typeof module !== 'undefined' && module.exports) {\n  module.exports = $$;\n}\n\n// Export for ES modules\nif (typeof exports !== 'undefined') {\n  exports.default = $$;\n}\n\n// Export for browser global\nif (typeof window !== 'undefined') {\n  window.WebJS = $$;\n}\n"],
  "mappings": "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",
  "names": ["require_utils", "__commonJSMin", "exports", "module", "rtrim", "str", "charlist", "re", "ltrim", "getUniqueId", "require_pubsub", "__commonJSMin", "exports", "module", "createPubSub", "topics", "subUid", "topic", "args", "subscribers", "len", "func", "token", "m", "i", "j", "require_url", "__commonJSMin", "exports", "module", "getRootUrl", "getApiUrl", "getUrl", "getUrlParams", "s", "params", "i", "parts", "getUrlParam", "parameter", "parameters", "require_auth", "__commonJSMin", "exports", "module", "getAuthUser", "registry", "setAuthUser", "user", "getAuthToken", "setAuthToken", "token", "getLanguage", "language", "setLanguage", "require_navigation", "__commonJSMin", "exports", "module", "rtrim", "ltrim", "createNavigation", "config", "navigateTo", "url", "data", "options", "queryString", "key", "separator", "link", "require_registry", "__commonJSMin", "exports", "module", "global", "factory", "getRootUrl", "protocol", "hostname", "port", "hasValidProtocol", "hasValidHostname", "portString", "base64encode", "str", "jsonEncode", "data", "jsonDecode", "json", "getNamespace", "namespace", "namespaceFinal", "createNamespacedKey", "key", "createExpirationKey", "namespacedKey", "encrypt", "value", "jsonString", "passLen", "result", "i", "passOffset", "calAscii", "decrypt", "encryptedStr", "codesArr", "ch", "e", "isExpired", "expirationKey", "expiresValue", "expires", "setValue", "expirationTime", "getValue", "removeValue", "emptyNamespace", "namespacePrefix", "keys", "Registry", "encryptedValue", "require_loadWidgets", "__commonJSMin", "exports", "module", "loadWidgets", "widget", "url", "response", "html", "codes", "i", "script", "e", "error", "require_web", "__commonJSMin", "exports", "module", "rtrim", "ltrim", "getUniqueId", "createPubSub", "getUrl", "getUrlParams", "getUrlParam", "getRootUrl", "getApiUrl", "getAuthUser", "setAuthUser", "getAuthToken", "setAuthToken", "getLanguage", "setLanguage", "createNavigation", "Registry", "loadWidgets", "Initialize", "key", "value", "parameter", "user", "token", "language", "url", "data", "options", "event", "callback"]
}
