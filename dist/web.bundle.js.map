{
  "version": 3,
  "sources": ["../src/web.js"],
  "sourcesContent": ["function Config() {\r\n  this.getUniqueId = function () {\r\n    return typeof APP_ID == \"undefined\"\r\n      ? JSON.stringify(window.location.hostname)\r\n      : APP_ID;\r\n  };\r\n  this.getRootUrl = function () {\r\n    return typeof WEBSITE_URL == \"undefined\"\r\n      ? window.location.protocol +\r\n          \"//\" +\r\n          window.location.hostname +\r\n          (window.location.port ? \":\" + location.port : \"\")\r\n      : WEBSITE_URL;\r\n  };\r\n  this.getApiUrl = function () {\r\n    return typeof API_URL == \"undefined\"\r\n      ? window.location.protocol +\r\n          \"//\" +\r\n          window.location.hostname +\r\n          (location.port ? \":\" + window.location.port : \"\") +\r\n          \"/api\"\r\n      : API_URL;\r\n  };\r\n}\r\n\r\n// Import the Registry from external package\r\n// https://github.com/lesichkovm/registryjs\r\n// https://www.npmjs.com/package/@lesichkovm/registryjs\r\n\r\n\r\n/**\r\n * Initialize\r\n * @type $$\r\n */\r\nfunction Initialize() {\r\n  /* START: Public Scope */\r\n  this.debug = true;\r\n\r\n  /**\r\n   * Stores a key-value pair to the registry\r\n   *\r\n   * @param {String} key\r\n   * @param {Object} value\r\n   * @returns {Object}\r\n   */\r\n  this.get = function (key) {\r\n    return Registry.get(key);\r\n  };\r\n\r\n  /**\r\n   * Retrieves a key value from the registry\r\n   *\r\n   * @param {String} key\r\n   * @returns {Object}\r\n   */\r\n  this.set = function (key, value) {\r\n    return Registry.set(key, value);\r\n  };\r\n  \r\n  /**\r\n   * Returns the API URL\r\n   * If an API_URL variable is set, will return as it is. Otherwise will\r\n   * generate one, assuming the API is hosted on the same domain {domain}/api\r\n   * @returns {String}\r\n   */\r\n  this.getApiUrl = function () {\r\n    return Config.getApiUrl();\r\n  };\r\n\r\n  /**\r\n   * Returns the current page URL\r\n   *\r\n   * @returns {String}\r\n   */\r\n  this.getUrl = function () {\r\n    return window.location.href;\r\n  };\r\n\r\n  /**\r\n   * Returns the URL parameters\r\n   *\r\n   * @returns {Array}\r\n   */\r\n  this.getUrlParams = function () {\r\n    var s = window.location.search.substring(1).split(\"&\");\r\n    var p = {};\r\n    if (!s.length) {\r\n      return p;\r\n    }\r\n\r\n    for (var i = 0; i < s.length; i++) {\r\n      var parts = s[i].split(\"=\");\r\n      p[unescape(parts[0])] = unescape(parts[1]);\r\n    }\r\n\r\n    return p;\r\n  };\r\n\r\n  /**\r\n   * Returns a single URL parameter\r\n   *\r\n   * @returns {String}\r\n   */\r\n  this.getUrlParam = function (parameter) {\r\n    var parameters = this.getUrlParams();\r\n    return typeof parameters[parameter] === \"undefined\"\r\n      ? null\r\n      : parameters[parameter];\r\n  };\r\n\r\n  /**\r\n   * Returns the authenticated user\r\n   * Key \"AuthUser\"\r\n   * @returns {Array}\r\n   */\r\n  this.getAuthUser = function () {\r\n    if (Registry.get(\"AuthUser\") === null) {\r\n      return null;\r\n    }\r\n    return Registry.get(\"AuthUser\");\r\n  };\r\n\r\n  /**\r\n   * Sets the authenticated user.\r\n   * Key \"AuthUser\"\r\n   *\r\n   * @returns {Array}\r\n   */\r\n  this.setAuthUser = function (user) {\r\n    return Registry.set(\"AuthUser\", user);\r\n  };\r\n\r\n  /**\r\n   * Returns the authentication token\r\n   * Key \"AuthToken\"\r\n   *\r\n   * @returns {String}\r\n   */\r\n  this.getAuthToken = function () {\r\n    return Registry.get(\"AuthToken\");\r\n  };\r\n\r\n  /**\r\n   * Sets the authentication token.\r\n   * Key \"AuthToken\"\r\n   *\r\n   * @returns {Array}\r\n   */\r\n  this.setAuthToken = function (token) {\r\n    return Registry.set(\"AuthToken\", token);\r\n  };\r\n  \r\n  /**\r\n   * Returns the current language, if set.\r\n   * Key \"CurrentLanguage\"\r\n   * @returns {Array}\r\n   */\r\n  this.getLanguage = function () {\r\n    var language = Registry.get(\"CurrentLanguage\");\r\n    if (language === null) {\r\n      language = \"en\";\r\n    }\r\n    return language;\r\n  };\r\n\r\n  /**\r\n   * Sets the current language.\r\n   * Key \"CurrentLanguage\"\r\n   * @returns {Array}\r\n   */\r\n  this.setLanguage = function (language) {\r\n    return Registry.set(\"CurrentLanguage\", language);\r\n  };\r\n\r\n  /**\r\n   * Redirects the user to the specified URL\r\n   *\r\n   * Options:\r\n   * - target = _blank - will open a new window\r\n   *\r\n   * @param {*} url\r\n   * @param {*} data\r\n   * @param {*} options\r\n   * @returns\r\n   */\r\n  this.to = function (url, data, options) {\r\n    if (url.match(\"^http://\") || url.match(\"^https://\")) {\r\n      // External url\r\n    } else {\r\n      var url = rtrim(Config.getRootUrl(), [\"/\"]) + \"/\" + ltrim(url, [\"/\"]);\r\n    }\r\n\r\n    var queryString =\r\n      typeof data === \"undefined\"\r\n        ? \"\"\r\n        : Object.keys(data)\r\n            .map((key) => {\r\n              return (\r\n                encodeURIComponent(key) + \"=\" + encodeURIComponent(data[key])\r\n              );\r\n            })\r\n            .join(\"&\");\r\n\r\n    if (queryString.length > 0) {\r\n      url = url + (url.indexOf(\"?\") < 0 ? \"?\" : \"&\") + queryString;\r\n    }\r\n\r\n    var options = typeof options === \"undefined\" ? {} : options;\r\n\r\n    if (options.target === \"_blank\") {\r\n      var link = document.createElement(\"a\");\r\n      link.href = url;\r\n      link.target = \"_blank\";\r\n      link.style.display = \"none\";\r\n      document.body.appendChild(link);\r\n      document.body.lastElementChild.click();\r\n    } else {\r\n      window.location.href = url;\r\n    }\r\n\r\n    return false; // otherwise links will be triggered\r\n  };\r\n\r\n  var topics = {},\r\n    subUid = -1;\r\n\r\n  this.publish = function (topic, args) {\r\n    if (!topics[topic]) {\r\n      return false;\r\n    }\r\n\r\n    setTimeout(function () {\r\n      var subscribers = topics[topic],\r\n        len = subscribers ? subscribers.length : 0;\r\n\r\n      while (len--) {\r\n        subscribers[len].func(topic, args);\r\n      }\r\n    }, 0);\r\n\r\n    return true;\r\n  };\r\n\r\n  this.subscribe = function (topic, func) {\r\n    if (!topics[topic]) {\r\n      topics[topic] = [];\r\n    }\r\n\r\n    var token = (++subUid).toString();\r\n    topics[topic].push({\r\n      token: token,\r\n      func: func,\r\n    });\r\n    return token;\r\n  };\r\n\r\n  this.unsubscribe = function (token) {\r\n    for (var m in topics) {\r\n      if (topics[m]) {\r\n        for (var i = 0, j = topics[m].length; i < j; i++) {\r\n          if (topics[m][i].token === token) {\r\n            topics[m].splice(i, 1);\r\n            return token;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return false;\r\n  };\r\n\r\n  function rtrim(str, charlist) {\r\n    charlist = !charlist\r\n      ? \" \\\\s\\u00A0\"\r\n      : (charlist + \"\").replace(/([\\[\\]\\(\\)\\.\\?\\/\\*\\{\\}\\+\\$\\^\\:])/g, \"\\\\$1\");\r\n    var re = new RegExp(\"[\" + charlist + \"]+$\", \"g\");\r\n    return (str + \"\").replace(re, \"\");\r\n  }\r\n\r\n  function ltrim(str, charlist) {\r\n    charlist = !charlist\r\n      ? \" \\\\s\\u00A0\"\r\n      : (charlist + \"\").replace(/([\\[\\]\\(\\)\\.\\?\\/\\*\\{\\}\\+\\$\\^\\:])/g, \"$1\");\r\n    var re = new RegExp(\"^[\" + charlist + \"]+\", \"g\");\r\n    return (str + \"\").replace(re, \"\");\r\n  }\r\n}\r\n\r\n// Import Registry from the external package\r\nif (typeof require !== 'undefined') {\r\n  // Node.js environment\r\n  try {\r\n    const RegistryJS = require('@lesichkovm/registryjs');\r\n    Registry = RegistryJS;\r\n  } catch (e) {\r\n    console.error('Failed to load @lesichkovm/registryjs:', e);\r\n  }\r\n} else if (typeof window !== 'undefined' && window.Registry) {\r\n  // Browser environment when loaded via script tag\r\n  Registry = window.Registry;\r\n} else if (typeof globalThis !== 'undefined' && globalThis.Registry) {\r\n  // Support for modern environments\r\n  Registry = globalThis.Registry;\r\n} else {\r\n  throw new Error('RegistryJS is required. Please include it before WebJS.');\r\n}\r\n\r\n// Initialize components\r\nConfig = new Config();\r\nRegistry = new Registry(Config.getUniqueId());\r\n$$ = new Initialize();\r\n\r\n// Export for CommonJS/Node.js\r\nif (typeof module !== 'undefined' && module.exports) {\r\n  module.exports = $$;\r\n}\r\n\r\n// Export for ES modules\r\nif (typeof exports !== 'undefined') {\r\n  exports.default = $$;\r\n}\r\n\r\n// Export for browser global\r\nif (typeof window !== 'undefined') {\r\n  window.WebJS = $$;\r\n}\r\n"],
  "mappings": "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",
  "names": ["require_web", "__commonJSMin", "exports", "module", "Config", "Initialize", "key", "value", "s", "p", "i", "parts", "parameter", "parameters", "user", "token", "language", "url", "data", "options", "rtrim", "ltrim", "queryString", "link", "topics", "subUid", "topic", "args", "subscribers", "len", "func", "m", "j", "str", "charlist", "re", "__require", "RegistryJS", "e"]
}
